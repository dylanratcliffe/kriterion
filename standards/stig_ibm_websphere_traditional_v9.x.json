{
  "name": "stig_ibm_websphere_traditional_v9.x",
  "date": "2018-08-24",
  "description": "This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.",
  "title": "IBM WebSphere Traditional V9.x Security Technical Implementation Guide",
  "version": "1",
  "item_syntax": "^\\w-\\d+$",
  "section_separator": null,
  "items": [
    {
      "id": "V-81193",
      "title": "The WebSphere Application Server maximum in-memory session count must be set according to application requirements.",
      "description": "Application management includes the ability to control the number of sessions that utilize an application by all accounts and/or account types. Limiting the number of allowed sessions is helpful in limiting risks related to Denial of Service attacks.\n\nApplication servers host and expose business logic and application processes.\n\nThe application server must possess the capability to limit the maximum number of concurrent sessions in a manner that affects the entire application server or on an individual application basis.\n\nAlthough there is some latitude concerning the settings themselves, the settings should follow DoD-recommended values, but the settings should be configurable to allow for future DoD direction.\n\nWhile the DoD will specify recommended values, the values can be adjusted to accommodate the operational requirement of a given system.",
      "severity": "medium"
    },
    {
      "id": "V-81195",
      "title": "The WebSphere Application Server admin console session timeout must be configured.",
      "description": "An attacker can take advantage of user sessions that are left open, thus bypassing the user authentication process.\n\nTo thwart the vulnerability of open and unused user sessions, the application server must be configured to close the sessions when a configured condition or trigger event is met.\n\nSession termination terminates all processes associated with a user's logical session except those processes that are specifically created by the user (i.e., session owner) to continue after the session is terminated.\n\nConditions or trigger events requiring automatic session termination can include, for example, periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.",
      "severity": "medium"
    },
    {
      "id": "V-81197",
      "title": "The WebSphere Application Server automatic repository checkpoints must be enabled to track configuration changes.",
      "description": "Without enabling repository checkpoints, you will not be able to determine the history of changes to WebSphere configuration files, and who made those changes.",
      "severity": "medium"
    },
    {
      "id": "V-81199",
      "title": "The WebSphere Application Server administrative security must be enabled.",
      "description": "In previous releases of WebSphere® Application Server, when a user enabled global security, both administrative and application security were enabled.  The previous notion of global security is split into administrative security and application security, each of which you can enable separately.\n\nAs a result of this split, WebSphere Application Server clients must know whether application security is disabled at the target server. Administrative security is enabled, by default. Application security is disabled, by default. Before you can enable application security, you must verify that administrative security is enabled. Application security is in effect only when administrative security is enabled.",
      "severity": "high"
    },
    {
      "id": "V-81201",
      "title": "The WebSphere Application Server bus security must be enabled.",
      "description": "A service integration bus is a group of one or more application servers or server clusters in a WebSphere® Application Server cell that cooperate to provide asynchronous messaging services. The application servers or server clusters in a bus are known as bus members.\n\nWhen a bus is created with bus security enabled, the following conditions apply:\nThe bus requires client authentication.\nThe bus enforces authorization policy.\nThe bus requires use of SSL transport chains.",
      "severity": "high"
    },
    {
      "id": "V-81203",
      "title": "The WebSphere Application Server security auditing must be enabled.",
      "description": "Security auditing will not be performed unless the audit security subsystem has been enabled. Global security must be enabled for the security audit subsystem to function, as no security auditing occurs if global security is not also enabled. Enable global security before enabling security auditing.\n\nSatisfies: SRG-APP-000016-AS-000013, SRG-APP-000343-AS-000030, SRG-APP-000080-AS-000045, SRG-APP-000092-AS-000053, SRG-APP-000266-AS-000168, SRG-APP-000267-AS-000170",
      "severity": "medium"
    },
    {
      "id": "V-81205",
      "title": "The WebSphere Application Server groups in the user registry mapped to WebSphere auditor roles must be configured in accordance with the security plan.",
      "description": "Logging must be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations post security incident.\n\nRemote access by administrators requires that the admin activity be logged.\n\nApplication servers provide a web and command line-based remote management capability for managing the application server. Application servers must ensure that all actions related to administrative functionality such as application server configuration are logged.\n\nSatisfies: SRG-APP-000016-AS-000013, SRG-APP-000343-AS-000030",
      "severity": "medium"
    },
    {
      "id": "V-81207",
      "title": "The WebSphere Application Server users in the WebSphere auditor role must be configured in accordance with the System Security Plan.",
      "description": "Logging must be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations post security incident.\n\nRemote access by administrators requires that the admin activity be logged.\n\nApplication servers provide a web and command line-based remote management capability for managing the application server. Application servers must ensure that all actions related to administrative functionality such as application server configuration are logged.\n\nSatisfies: SRG-APP-000016-AS-000013, SRG-APP-000343-AS-000030, SRG-APP-000090-AS-000051",
      "severity": "medium"
    },
    {
      "id": "V-81209",
      "title": "The WebSphere Application Server audit event type filters must be configured.",
      "description": "Logging must be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations post security incident.\n\nRemote access by administrators requires that the admin activity be logged.\n\nApplication servers provide a web and command line-based remote management capability for managing the application server. Application servers must ensure that all actions related to administrative functionality such as application server configuration are logged.\n\nSatisfies: SRG-APP-000016-AS-000013, SRG-APP-000343-AS-000030, SRG-APP-000089-AS-000050, SRG-APP-000495-AS-000220, SRG-APP-000499-AS-000224, SRG-APP-000503-AS-000228, SRG-APP-000504-AS-000229, SRG-APP-000505-AS-000230, SRG-APP-000506-AS-000231, SRG-APP-000093-AS-000054, SRG-APP-000095-AS-000056, SRG-APP-000097-AS-000060, SRG-APP-000098-AS-000061, SRG-APP-000099-AS-000062, SRG-APP-000100-AS-000063, SRG-APP-000101-AS-000072, SRG-APP-000381-AS-000089, SRG-APP-000080-AS-000045",
      "severity": "medium"
    },
    {
      "id": "V-81211",
      "title": "The WebSphere Application Server audit service provider must be enabled.",
      "description": "Logging must be utilized in order to track system activity, assist in diagnosing system issues, and provide evidence needed for forensic investigations post security incident.\n\nRemote access by administrators requires that the admin activity be logged.\n\nApplication servers provide a web and command line-based remote management capability for managing the application server. Application servers must ensure that all actions related to administrative functionality such as application server configuration are logged.\n\nSatisfies: SRG-APP-000016-AS-000013, SRG-APP-000343-AS-000030",
      "severity": "medium"
    },
    {
      "id": "V-81213",
      "title": "The WebSphere Application Server users in a local user registry group must be authorized for that group.",
      "description": "Application servers provide remote access capability and must be able to enforce remote access policy requirements or work in conjunction with enterprise tools designed to enforce policy requirements. Automated monitoring and control of remote access sessions allows organizations to detect cyber attacks and also ensure ongoing compliance with remote access policies by logging connection activities of remote users.\n\nExamples of policy requirements include, but are not limited to, authorizing remote access to the information system, limiting access based on authentication credentials, and monitoring for unauthorized access.\n\nSatisfies: SRG-APP-000315-AS-000094, SRG-APP-000380-AS-000088, SRG-APP-000133-AS-000092, SRG-APP-000033-AS-000024, SRG-APP-000153-AS-000104",
      "severity": "medium"
    },
    {
      "id": "V-81215",
      "title": "The WebSphere Application Server Quality of Protection (QoP) must be set to use TLSv1.2 or higher.",
      "description": "Quality of Protection specifies the security level, ciphers, and mutual authentication settings for the Secure Socket Layer (SSL/TLS) configuration.",
      "severity": "medium"
    },
    {
      "id": "V-81217",
      "title": "The WebSphere Application Server global application security must be enabled.",
      "description": "Application security enables security for the applications in your environment. This setting provides application isolation and meets security requirements such as using SSL for authenticating application users.\n\nIn previous releases of WebSphere® Application Server, when a user enabled global security, both administrative and application security were enabled. The previous notion of global security is split into administrative security and application security, each of which you can enable separately.\n\nAs a result of this split, WebSphere Application Server clients must know whether application security is disabled at the target server. Administrative security is enabled, by default. Application security is disabled, by default. Before you can enable application security, you must verify that administrative security is enabled. Application security is in effect only when administrative security is enabled.\n\nSatisfies: SRG-APP-000014-AS-000009, SRG-APP-000172-AS-000120",
      "severity": "high"
    },
    {
      "id": "V-81219",
      "title": "The WebSphere Application Server Single Sign On (SSO) must have SSL enabled for Web and SIP Security.",
      "description": "Remote management access is accomplished by leveraging common communication protocols and establishing a remote connection to the application server via a network for the purposes of managing the application server. If cryptography is not used, then the session data traversing the remote connection could be intercepted and compromised. \n\nTypes of management interfaces utilized by an application server include web-based HTTPS interfaces as well as command line-based management interfaces.\n\nSatisfies: SRG-APP-000014-AS-000009, SRG-APP-000172-AS-000120, SRG-APP-000158-AS-000108",
      "severity": "high"
    },
    {
      "id": "V-81221",
      "title": "The WebSphere Application Server security cookies must be set to HTTPOnly.",
      "description": "Web applications use cookies to track users across requests. These cookies, while typically not sensitive in themselves, connect you to your existing state on the back end system. If an intruder were to capture one of your cookies, they could potentially use the cookie to act as you. Important Web traffic should be encrypted using SSL. This includes important cookies. \n\nIn the case of WebSphere Application Server, the most important cookie is the LTPA cookie, and therefore it should be configured to be sent only over SSL.",
      "severity": "medium"
    },
    {
      "id": "V-81223",
      "title": "The WebSphere Application Server Java 2 security must be enabled.",
      "description": "Java 2 security provides a policy-based fine grained access control mechanism that increases overall system integrity by checking for permissions before allowing access to certain protected system resources. Java 2 Security is independent on J2EE role-based authorization. Java 2 Security guards access to system resources such as file input and output, sockets, and properties, whereas J2EE security guards access to Web resources such as servlets and JSP files. Administrators should understand the possible consequences of enabling Java 2 Security if applications are not prepared for Java 2 Security. Java 2 Security places some new requirements on application developers and administrators. Admins need to make sure that all the applications are granted the required permissions; otherwise, applications may fail to run. By default, applications are granted the permissions recommended in the J2EE 1.3 Specification. For details of default permissions granted to applications in WebSphere, please refer to the following policy files:\n\n/QIBM/ProdData/Java400/jdk14/lib/security/java.policy\n/QIBM/UserData/WebASE51/ASE/instance/properties/server.policy\n/QIBM/UserData/WebASE51/ASE/instance/config/cells/cell/nodes/node/app.policy\nwhere instance is the name of your instance, cell is the name of your cell, and node is the name of your node.",
      "severity": "high"
    },
    {
      "id": "V-81225",
      "title": "The WebSphere Application Server Java 2 security must not be bypassed.",
      "description": "WebSphere provides a passive filter mechanism that will allow administrators to set Java 2 security in the admin console as enabled while still allowing applications to access host resources. This setting bypasses the enforcement of Java2 security. Application access is allowed and activity is logged to the system.out file. This feature is to aid in the identification of application access requirements to the underlying host so security policies can be created. This feature is executed via a custom property that is set for each application server instance operating on the WebSphere server. This setting should only be enabled in a development or testing environment in order to identify what applications access requirements are so security policies can then be created.",
      "severity": "high"
    },
    {
      "id": "V-81227",
      "title": "The WebSphere Application Server users in the admin role must be authorized.",
      "description": "Strong access controls are critical to securing the application server. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by the application server to control access between users (or processes acting on behalf of users) and objects (e.g., applications, files, records, processes, application domains) in the application server.\n\nWithout stringent logical access and authorization controls, an adversary may have the ability, with very little effort, to compromise the application server and associated supporting infrastructure.\n\nSatisfies: SRG-APP-000033-AS-000024, SRG-APP-000380-AS-000088, SRG-APP-000340-AS-000185",
      "severity": "medium"
    },
    {
      "id": "V-81229",
      "title": "The WebSphere Application Server LDAP groups must be authorized for the WebSphere role.",
      "description": "Strong access controls are critical to securing the application server. Access control policies (e.g., identity-based policies, role-based policies, attribute-based policies) and access enforcement mechanisms (e.g., access control lists, access control matrices, cryptography) must be employed by the application server to control access between users (or processes acting on behalf of users) and objects (e.g., applications, files, records, processes, application domains) in the application server.\n\nWithout stringent logical access and authorization controls, an adversary may have the ability, with very little effort, to compromise the application server and associated supporting infrastructure.\n\nSatisfies: SRG-APP-000033-AS-000024, SRG-APP-000267-AS-000170",
      "severity": "medium"
    },
    {
      "id": "V-81231",
      "title": "The WebSphere Application Server users in a LDAP user registry group must be authorized for that group.",
      "description": "Preventing non-privileged users from executing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges.\n\nRestricting non-privileged users also prevents an attacker, who has gained access to a non-privileged account, from elevating privileges, creating accounts, and performing system checks and maintenance.",
      "severity": "medium"
    },
    {
      "id": "V-81233",
      "title": "The WebSphere Application Server management interface must display the Standard Mandatory DoD Notice and Consent Banner before granting access to the system.",
      "description": "Application servers are required to display the Standard Mandatory DoD Notice and Consent Banner before granting access to the system management interface, providing privacy and security notices consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance that states that: \n\n(i) users are accessing a U.S. Government information system; \n(ii) system usage may be monitored, recorded, and subject to audit; \n(iii) unauthorized use of the system is prohibited and subject to criminal and civil penalties; and \n(iv) the use of the system indicates consent to monitoring and recording.\n\nSystem use notification messages can be implemented in the form of warning banners displayed when individuals log on to the information system. \n\nSystem use notification is intended only for information system access including an interactive logon interface with a human user, and is not required when an interactive interface does not exist. \n\nUse this banner for desktops, laptops, and other devices accommodating banners of 1300 characters. The banner shall be implemented as a click-through banner at logon (to the extent permitted by the operating system), meaning it prevents further activity on the information system unless and until the user executes a positive action to manifest agreement by clicking on a box indicating \"OK\".\n\n\"You are accessing a U.S. Government (USG) Information System (IS) that is provided for USG-authorized use only.\nBy using this IS (which includes any device attached to this IS), you consent to the following conditions:\n-The USG routinely intercepts and monitors communications on this IS for purposes including, but not limited to, penetration testing, COMSEC monitoring, network operations and defense, personnel misconduct (PM), law enforcement (LE), and counterintelligence (CI) investigations.\n-At any time, the USG may inspect and seize data stored on this IS.\n-Communications using, or data stored on, this IS are not private, are subject to routine monitoring, interception, and search, and may be disclosed or used for any USG-authorized purpose.\n-This IS includes security measures (e.g., authentication and access controls) to protect USG interests--not for your personal benefit or privacy.\n-Notwithstanding the above, using this IS does not constitute consent to PM, LE or CI investigative searching or monitoring of the content of privileged communications, or work product, related to personal representation or services by attorneys, psychotherapists, or clergy, and their assistants. Such communications and work product are private and confidential. See User Agreement for details.\"",
      "severity": "medium"
    },
    {
      "id": "V-81235",
      "title": "The WebSphere Application Server management interface must retain the Standard Mandatory DoD Notice and Consent Banner on the screen until users acknowledge the usage conditions and take explicit actions to log on for further access.",
      "description": "To establish acceptance of system usage policy, a click-through banner at the application server management interface logon is required. The banner shall prevent further activity on the application server unless and until the user executes a positive action to manifest agreement by clicking on a box indicating \"OK\".",
      "severity": "medium"
    },
    {
      "id": "V-81237",
      "title": "The WebSphere Application Server must generate log records when successful/unsuccessful attempts to access subject privileges occur.",
      "description": "Accessing a subject's privileges can be used to elevate a lower-privileged subject's privileges temporarily in order to cause harm to the application server or to gain privileges to operate temporarily for a designed purpose. When these actions take place, the event needs to be logged.\n\nApplication servers either provide a local user store, or they integrate with enterprise user stores like LDAP. When the application server provides the user store and enforces authentication, the application server must generate a log record when modification of privileges is successfully or unsuccessfully performed.",
      "severity": "low"
    },
    {
      "id": "V-81239",
      "title": "The WebSphere Application Server must allocate JVM log record storage capacity in accordance with organization-defined log record storage requirements.",
      "description": "JVM logs are logs used to store application and runtime related events, rather than audit related events. They are mainly used to diagnose application or runtime bugs. But sometimes they may be useful in providing more context when correlated with audit related events. \n\nThe proper management of log records not only dictates proper archiving processes and procedures be established, it also requires allocating enough storage space to maintain the logs online for a defined period of time.\n\nIf adequate online log storage capacity is not maintained, intrusion monitoring, security investigations, and forensic analysis can be negatively affected.\n\nIt is important to keep a defined amount of logs online and readily available for investigative purposes. The logs may be stored on the application server until they can be archived to a log system or, in some instances, a Storage Area Networks (SAN). Regardless of the method used, log record storage capacity must be sufficient to store log data when the data cannot be offloaded to a log system or SAN.",
      "severity": "medium"
    },
    {
      "id": "V-81241",
      "title": "The WebSphere Application Server must allocate audit log record storage capacity in accordance with organization-defined log record storage requirements.",
      "description": "The proper management of log records not only dictates proper archiving processes and procedures be established, it also requires allocating enough storage space to maintain the logs online for a defined period of time.\n\nIf adequate online log storage capacity is not maintained, intrusion monitoring, security investigations, and forensic analysis can be negatively affected.\n\nIt is important to keep a defined amount of logs online and readily available for investigative purposes. The logs may be stored on the application server until they can be archived to a log system or, in some instances, a Storage Area Networks (SAN). Regardless of the method used, log record storage capacity must be sufficient to store log data when the data cannot be offloaded to a log system or SAN.",
      "severity": "medium"
    },
    {
      "id": "V-81243",
      "title": "The WebSphere Application Server must provide an immediate real-time alert to authorized users of all log failure events requiring real-time alerts.",
      "description": "It is critical for the appropriate personnel to be aware if a system is at risk of failing to process logs as required. Log processing failures include software/hardware errors, failures in the log capturing mechanisms, and log storage capacity being reached or exceeded. Notification of the failure event will allow administrators to take actions so that logs are not lost.",
      "severity": "medium"
    },
    {
      "id": "V-81245",
      "title": "The WebSphere Application Server must alert the SA and ISSO, at a minimum, in the event of a log processing failure.",
      "description": "Logs are essential to monitor the health of the system, investigate changes that occurred to the system, or investigate a security incident. When log processing fails, the events during the failure can be lost. To minimize the timeframe of the log failure, an alert needs to be sent to the SA and ISSO at a minimum.\n\nLog processing failures include, but are not limited to, failures in the application server log capturing mechanisms or log storage capacity being reached or exceeded. In some instances, it is preferred to send alarms to individuals rather than to an entire group. Application servers must be able to trigger an alarm and send an alert to, at a minimum, the SA and ISSO in the event there is an application server log processing failure.",
      "severity": "low"
    },
    {
      "id": "V-81247",
      "title": "The WebSphere Application Server audit subsystem failure action must be set to Log warning.",
      "description": "Logs are essential to monitor the health of the system, investigate changes that occurred to the system, or investigate a security incident. When log processing fails, the events during the failure can be lost. To minimize the timeframe of the log failure, an alert needs to be sent to the SA and ISSO at a minimum.\n\nLog processing failures include, but are not limited to, failures in the application server log capturing mechanisms or log storage capacity being reached or exceeded. WebSphere must be set to log warnings that the audit subsystem has failed or is in danger or failing so action can be taken to correct the issue.",
      "severity": "medium"
    },
    {
      "id": "V-81249",
      "title": "The WebSphere Application Server must shut down by default upon log failure (unless availability is an overriding concern).",
      "description": "It is critical that, when a system is at risk of failing to process logs, it detects and takes action to mitigate the failure. Log processing failures include software/hardware errors, failures in the log capturing mechanisms, and log storage capacity being reached or exceeded. During a failure, the application server must be configured to shut down unless the application server is part of a high availability system or availability is an overriding concern.\n\nWhen availability is an overriding concern, other approved actions in response to a log failure include: \n\n(i) If the failure was caused by the lack of log record storage capacity, the application must continue generating log records if possible (automatically restarting the log service if necessary), overwriting the oldest log records in a first-in-first-out manner.\n\n(ii) If log records are sent to a centralized collection server and communication with this server is lost or the server fails, the application must queue log records locally until communication is restored or until the log records are retrieved manually. Upon restoration of the connection to the centralized collection server, action should be taken to synchronize the local log data with the collection server.\n\nIf the server will continue to process without any logging mitigations in place and the availability of the server is not critical to the success of the mission, the server must be configured to shut down on log failure.",
      "severity": "low"
    },
    {
      "id": "V-81251",
      "title": "The WebSphere Application Server high availability applications must be configured to fail over to another system in the event of log subsystem failure.",
      "description": "This requirement is dependent upon system MAC and availability. If the system MAC and availability do not specify redundancy requirements, this requirement is NA.\n\nIt is critical that, when a system is at risk of failing to process logs as required, it detects and takes action to mitigate the failure.\n\nApplication servers must be capable of failing over to another system which can handle application and logging functions upon detection of an application log processing failure. This will allow continual operation of the application and logging functions while minimizing the loss of operation for the users and loss of log data.",
      "severity": "low"
    },
    {
      "id": "V-81253",
      "title": "The WebSphere Application Server must be configured to protect log information from any type of unauthorized read access.",
      "description": "WebSphere uses role-based access controls to restrict access to log data. To take advantage of this capability, WebSphere administrators must identify specific users and place them into their respective roles. The auditor role is used for controlling access to logs.",
      "severity": "low"
    },
    {
      "id": "V-81255",
      "title": "The WebSphere Application Server must protect log information from unauthorized modification.",
      "description": "WebSphere uses role-based access controls to restrict access to log data. To take advantage of this capability, WebSphere administrators must identify specific users and place them into their respective roles. The auditor role is used for controlling access to logs.",
      "severity": "medium"
    },
    {
      "id": "V-81257",
      "title": "The WebSphere Application Server must protect log information from unauthorized deletion.",
      "description": "WebSphere uses role based access controls to restrict access to log data. To take advantage of this capability, WebSphere administrators must identify specific users and place them into their respective roles. The auditor role is used for controlling access to logs.",
      "severity": "medium"
    },
    {
      "id": "V-81259",
      "title": "The WebSphere Application Server wsadmin file must be protected from unauthorized access.",
      "description": "Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. \n\nDepending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. \n\nIt is, therefore, imperative that access to log tools be controlled and protected from unauthorized access. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected as well.",
      "severity": "medium"
    },
    {
      "id": "V-81261",
      "title": "The WebSphere Application Server wsadmin file must be protected from unauthorized modification.",
      "description": "Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. \n\nDepending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. \n\nIt is, therefore, imperative that access to log tools be controlled and protected from unauthorized modification. If an attacker were to modify log tools, he could also manipulate logs to hide evidence of malicious activity. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected as well.",
      "severity": "medium"
    },
    {
      "id": "V-81263",
      "title": "The WebSphere Application Server wsadmin file must be protected from unauthorized deletion.",
      "description": "Protecting log data also includes identifying and protecting the tools used to view and manipulate log data. \n\nDepending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. \n\nIt is, therefore, imperative that access to log tools be controlled and protected from unauthorized modification. If an attacker were to delete log tools, the application server administrator would have no way of managing or viewing the logs. \n\nApplication servers provide a web- and/or a command line-based management functionality for managing the application server log capabilities. In addition, subsets of log tool components may be stored on the file system as jar, class, or xml configuration files. The application server must ensure that in addition to protecting any web-based log tools, any file system-based tools are protected from unauthorized deletion as well.",
      "severity": "medium"
    },
    {
      "id": "V-81265",
      "title": "The WebSphere Application Server must be configured to encrypt log information.",
      "description": "Protection of log records is of critical importance. Encrypting log records provides a level of protection that does not rely on host-based protections that can be accidentally misconfigured, such as file system permissions. Cryptographic mechanisms are the industry-established standard used to protect the integrity of log data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography. Encryption of log records must be tempered with architecture designs that incorporate log data into SIEM systems that read and act upon log data. Some SIEM systems may not be able to decrypt encrypted log data so encrypting the logs could be detrimental to the incident response process. This must be taken into account and addressed in the security plan.",
      "severity": "medium"
    },
    {
      "id": "V-81267",
      "title": "The WebSphere Application Server must be configured to sign log information.",
      "description": "Protection of log records is of critical importance. Encrypting log records provides a level of protection that does not rely on host-based protections that can be accidentally misconfigured, such as file system permissions. Cryptographic mechanisms are the industry-established standard used to protect the integrity of log data. An example of a cryptographic mechanism is the computation and application of a cryptographic-signed hash using asymmetric cryptography.",
      "severity": "medium"
    },
    {
      "id": "V-81269",
      "title": "The WebSphere Application Server process must not be started from the command line with the -password option.",
      "description": "The use of the -password option to launch a WebSphere process from the command line can result in a security exposure. Password information may become visible to any user with the ability to view system processes. For example, on a Linux system the \"ps\" command will display all running processes, which would include all of the command line flags used to start a WebSphere process.",
      "severity": "medium"
    },
    {
      "id": "V-81271",
      "title": "The WebSphere Application Server files must be owned by the non-root WebSphere user ID.",
      "description": "Having files owned by the root or administrator user is an indication that the WebSphere processes are being run with escalated privileges. Running as root/admin user gives attackers elevated privileges that can be used to compromise the system more easily compared to operating the WebSphere processes with regular user privileges.\n\nSpecifying a regular OS user when installing and managing WebSphere is best practice. By doing so, the WebSphere files will be owned by the user ID specified rather than being owned by the admin user.\n\nUse the underlying OS file permissions to ensure that access to the WebSphere files are restricted to only those users who require access.",
      "severity": "medium"
    },
    {
      "id": "V-81273",
      "title": "The WebSphere Application Server sample applications must be removed.",
      "description": "WebSphere samples are not intended for use in a production environment. Do not run them there, as they create significant security risks. In particular, the snoop servlet can provide an outsider with tremendous amounts of information about your system. This is precisely the type of information you do not want to give a potential intruder. \n\nDo not install the samples during the profile creation or uninstall the sample programs.",
      "severity": "low"
    },
    {
      "id": "V-81275",
      "title": "The WebSphere Application Server must remove JREs left by web server and plug-in installers for web servers and plugins running in the DMZ.",
      "description": "When you install IBM HTTP Server, the installer leaves behind a JRE. Remove this JRE, as it provides functions that are not needed by the Web server or plug-in under normal conditions. Keep in mind that this will make it impossible to run some tools such as ikeyman on this Web server. \n\nWhen you install the WebSphere Application Server HTTP Server plug-in using the IBM installer, it also leaves behind a JRE. Also, remove this JRE post install.\n\nHaving a functioning JRE in the DMZ provides attackers who have breached into the DMZ with additional tools to carry out further attacks.",
      "severity": "low"
    },
    {
      "id": "V-81277",
      "title": "The WebSphere Application Server must be run as a non-admin user.",
      "description": "Running WebSphere as an admin user gives attackers immediate admin privileges in the event the WebSphere processes are compromised.\n \nBest practice is to operate the WebSphere server with an account that has limited OS privileges.\n\nTo configure system startup: https://www.ibm.com/support/knowledgecenter/en/SSAW57_8.5.5/com.ibm.websphere.nd.multiplatform.doc/ae/trun_processrestart.html",
      "severity": "medium"
    },
    {
      "id": "V-81279",
      "title": "The WebSphere Application Server must disable JSP class reloading.",
      "description": "Application servers provide a myriad of differing processes, features, and functionalities. Some of these processes may be deemed to be unnecessary or too unsecure to run on a production DoD system. Application servers must provide the capability to disable or deactivate functionality and services that are deemed to be non-essential to the server mission or can adversely impact server performance, for example, disabling dynamic JSP reloading on production application servers as a best practice.",
      "severity": "medium"
    },
    {
      "id": "V-81293",
      "title": "The WebSphere Application Server must prohibit or restrict the use of nonsecure ports, protocols, modules, and/or services as defined in the PPSM CAL and vulnerability assessments.",
      "description": "Some networking protocols may not meet organizational security requirements to protect data and components.\n\nApplication servers natively host a number of various features, such as management interfaces, httpd servers, and message queues. These features all run on TCPIP ports. This creates the potential that the vendor may choose to utilize port numbers or network services that have been deemed unusable by the organization. The application server must have the capability to both reconfigure and disable the assigned ports without adversely impacting application server operation capabilities. For a list of approved ports and protocols, reference the DoD ports and protocols website at https://powhatan.iiie.disa.mil/ports/cal.html.",
      "severity": "medium"
    },
    {
      "id": "V-81299",
      "title": "The WebSphere Application Server LDAP user registry must be used.",
      "description": "To assure accountability and prevent unauthorized access, application server users must be uniquely identified and authenticated. This is typically accomplished via the use of a user store which is either local (OS-based) or centralized (LDAP) in nature.\n\nTo ensure support to the enterprise, the authentication must utilize an enterprise solution.",
      "severity": "medium"
    },
    {
      "id": "V-81305",
      "title": "The WebSphere Application Server local file-based user registry must not be used.",
      "description": "WebSphere does not provide direct audit of changes to the built-in file registry. The built-in file registry must not be used to support user logon accounts. Use an LDAP/AD server and manage user accounts centrally.",
      "severity": "medium"
    },
    {
      "id": "V-81311",
      "title": "The WebSphere Application Server multifactor authentication for network access to privileged accounts must be used.",
      "description": "Multifactor authentication creates a layered defense and makes it more difficult for an unauthorized person to access the application server. If one factor is compromised or broken, the attacker still has at least one more barrier to breach before successfully breaking into the target. Unlike a simple username/password scenario where the attacker could gain access by knowing both the username and password without the user knowing his account was compromised, multifactor authentication adds the requirement that the attacker must have something from the user, such as a token, or to biometrically be the user.\n\nMultifactor authentication is defined as: using two or more factors to achieve authentication. \n\nFactors include: \n(i) something a user knows (e.g., password/PIN); \n(ii) something a user has (e.g., cryptographic identification device, token); or \n(iii) something a user is (e.g., biometric). A CAC or PKI Hardware Token meets this definition.\n\nA privileged account is defined as an information system account with authorizations of a privileged user. These accounts would be capable of accessing the web management interface.\n\nWhen accessing the application server via a network connection, administrative access to the application server must be PKI Hardware Token enabled.\n\nSatisfies: SRG-APP-000149-AS-000102, SRG-APP-000391-AS-000239, SRG-APP-000392-AS-000240, SRG-APP-000151-AS-000103, SRG-APP-000177-AS-000126, SRG-APP-000402-AS-000247, SRG-APP-000403-AS-000248, SRG-APP-000404-AS-000249, SRG-APP-000219-AS-000147",
      "severity": "medium"
    },
    {
      "id": "V-81325",
      "title": "The WebSphere Application Server must provide security extensions to extend the SOAP protocol and provide secure authentication when accessing sensitive data.",
      "description": "Application servers may provide a web services capability that could be leveraged to allow remote access to sensitive application data. A web service which is a repeatable process used to make data available to remote clients, should not be confused with a web server. \n\nMany web services utilize SOAP, which in turn utilizes XML and HTTP as a transport. Natively, SOAP does not provide security protections. As such, the application server must provide security extensions to enhance SOAP capabilities to ensure that secure authentication mechanisms are employed to protect sensitive data. The WS_Security suite is a widely used and acceptable SOAP security extension.",
      "severity": "medium"
    },
    {
      "id": "V-81329",
      "title": "The WebSphere Application Server must provide security extensions to extend the SOAP protocol and provide secure authentication when accessing sensitive data.",
      "description": "Application servers may provide a web services capability that could be leveraged to allow remote access to sensitive application data. A web service, which is a repeatable process used to make data available to remote clients, should not be confused with a web server. \n\nMany web services utilize SOAP, which in turn utilizes XML and HTTP as a transport. Natively, SOAP does not provide security protections. As such, the application server must provide security extensions to enhance SOAP capabilities to ensure that secure authentication mechanisms are employed to protect sensitive data. The WS_Security suite is a widely used and acceptable SOAP security extension.",
      "severity": "medium"
    },
    {
      "id": "V-81333",
      "title": "The WebSphere Application Server must authenticate all network-connected endpoint devices before establishing any connection.",
      "description": "Device authentication requires unique identification and authentication that may be defined by type, by specific device, or by a combination of type and device.\n\nDevice authentication is accomplished via the use of certificates and protocols such as SSL mutual authentication.\n\nDevice authentication is performed when the application server is providing web services capabilities and data protection requirements mandate the need to establish the identity of the connecting device before the connection is established.\n\nNote: with LDAP registry, the entire DN in the certificate is used to look up LDAP. Filters may be configured. With other registries, only the first attribute after the first \"=\", e.g., CN=<user> is used.\n\nhttps://www.ibm.com/support/knowledgecenter/prodconn_1.0.0/com.ibm.scenarios.wmqwassecure.doc/topics/implementing.htm?cp=SSEQTP_8.0.0\n\nSatisfies: SRG-APP-000394-AS-000241, SRG-APP-000177-AS-000126",
      "severity": "medium"
    },
    {
      "id": "V-81341",
      "title": "The WebSphere Application Server must authenticate all endpoint devices before establishing a local, remote, and/or network connection using bidirectional authentication that is cryptographically based.",
      "description": "Device authentication requires unique identification and authentication that may be defined by type, by specific device, or by a combination of type and device.\n\nBidirectional authentication provides stronger safeguards to validate the identity of other devices for connections that are of greater risk.\n\nDevice authentication is performed when the application server is providing web services capabilities and data protection requirements mandate the need to establish the identity of the connecting device before the connection is established.\n\nBecause of the challenges of applying this requirement on a large scale, organizations are encouraged to only apply the requirement to those limited number (and type) of devices that truly need to support this capability.\n\nNote: with LDAP registry, the entire DN in the certificate is used to look up LDAP. Filters may be configured. With other registries, only the first attribute after the first \"=\", e.g., CN=<user> is used.",
      "severity": "medium"
    },
    {
      "id": "V-81343",
      "title": "The WebSphere Application Server application security must be enabled for each security domain except for publicly available applications specified in the System Security Plan.",
      "description": "By default, all administrative and user applications in WebSphere® Application Server use the global security configuration. For example, a user registry defined in global security is used to authenticate users for every application in the cell. WebSphere allows for additional WebSphere security domains where different security attributes for some or all of your user applications can be set. These domains must also be configured to use application security.",
      "severity": "high"
    },
    {
      "id": "V-81347",
      "title": "The WebSphere Application Server secure LDAP (LDAPS) must be used for authentication.",
      "description": "Passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission. \n\nApplication servers have the capability to utilize LDAP directories for authentication. If LDAP connections are not protected during transmission, sensitive authentication credentials can be stolen. When the application server utilizes LDAP, the LDAP traffic must be encrypted. \n\nTo ensure an error-free operation for this step, first extract to a file the Signer certificate of the LDAP and send that file to the WebSphere Application Server machine. Then add the certificate to the truststore being defined for the LDAP. In this way, you are assured that the remaining actions for this step will be successful.\n\nSatisfies: SRG-APP-000172-AS-000121, SRG-APP-000172-AS-000120",
      "severity": "high"
    },
    {
      "id": "V-81351",
      "title": "The WebSphere Application Server must prohibit the use of cached authenticators after an organization-defined time period.",
      "description": "When the application server is using PKI authentication, a local revocation cache must be stored for instances when the revocation cannot be authenticated through the network, but if cached authentication information is out of date, the validity of the authentication information may be questionable.",
      "severity": "medium"
    },
    {
      "id": "V-81357",
      "title": "The WebSphere Application Server default keystore passwords must be changed.",
      "description": "The cornerstone of the PKI is the private key used to encrypt or digitally sign information. \n\nIf the private key is stolen, this will lead to the compromise of the authentication and non-repudiation gained through PKI because the attacker can use the private key to digitally sign documents and can pretend to be the authorized user. \n\nBoth the holders of a digital certificate and the issuing authority must protect the computers, storage devices, or whatever they use to keep the private keys. Java-based application servers utilize the Java keystore, which provides storage for cryptographic keys and certificates. The keystore is usually maintained in a file stored on the file system.",
      "severity": "high"
    },
    {
      "id": "V-81361",
      "title": "The WebSphere Application Server must use signer for DoD-issued certificates.",
      "description": "The cornerstone of PKI is the private key used to encrypt or digitally sign information. The key by itself is a cryptographic value that does not contain specific user information, but the key can be mapped to a user. Without mapping the certificate used to authenticate to the user account, the ability to determine the identity of the individual user or group will not be available for forensic analysis.\n\nApplication servers must provide the capability to utilize and meet requirements of the DoD Enterprise PKI infrastructure for application authentication.",
      "severity": "medium"
    },
    {
      "id": "V-81365",
      "title": "The WebSphere Application Server must utilize FIPS 140-2-approved encryption modules when authenticating users and processes.",
      "description": "Encryption is only as good as the encryption modules utilized. Unapproved cryptographic module algorithms cannot be verified and cannot be relied upon to provide confidentiality or integrity, and DoD data may be compromised due to weak algorithms. The use of TLS provides confidentiality of data in transit between the application server and client. FIPS 140-2 approved TLS versions include TLS V1.0 or greater. \n\nTLS must be enabled and non-FIPS-approved SSL versions must be disabled. NIST SP 800-52 specifies the preferred configurations for government systems.\n\nSatisfies: SRG-APP-000179-AS-000129, SRG-APP-000440-AS-000167, SRG-APP-000442-AS-000259, SRG-APP-000439-AS-000155, SRG-APP-000224-AS-000152, SRG-APP-000514-AS-000136, SRG-APP-000416-AS-000140",
      "severity": "medium"
    },
    {
      "id": "V-81367",
      "title": "The WebSphere Application Server must accept Personal Identity Verification (PIV) credentials from other federal agencies to access the management interface.",
      "description": "Personal Identity Verification (PIV) credentials are those credentials issued by federal agencies that conform to FIPS Publication 201 and supporting guidance documents. OMB Memorandum 11-11 requires federal agencies to continue implementing the requirements specified in HSPD-12 to enable agency-wide use of PIV credentials. PIV credentials are only used in an unclassified environment.\n\nAccess may be denied to authorized users if federal agency PIV credentials are not accepted to access the management interface.",
      "severity": "medium"
    },
    {
      "id": "V-81369",
      "title": "The WebSphere Application Server must use DoD-approved Signer Certificates.",
      "description": "Class 3 PKI certificates are used for servers and software signing rather than for identifying individuals. Class 4 certificates are used for business-to-business transactions. Utilizing unapproved certificates not issued or approved by DoD or CNS creates an integrity risk. The application server must utilize approved DoD or CNS Class 3 or Class 4 certificates for software signing and business-to-business transactions.",
      "severity": "medium"
    },
    {
      "id": "V-81371",
      "title": "The WebSphere Application Servers must not be in the DMZ.",
      "description": "The application server consists of the management interface and hosted applications. By separating the management interface from hosted applications, the user must authenticate as a privileged user to the management interface before being presented with management functionality. This prevents non-privileged users from having visibility to functions not available to the user. By limiting visibility, a compromised non-privileged account does not offer information to the attacker to functionality and information needed to further the attack on the application server.\n\nApplication server management functionality includes functions necessary to administer the application server and requires privileged access via one of the accounts assigned to a management role. The hosted application and hosted application functionality consists of the assets needed for the application to function, such as the business logic, databases, user authentication, etc.\n\nThe separation of application server administration functionality from hosted application functionality is either physical or logical and is accomplished by using different computers, different central processing units, different instances of the operating system, network addresses, network ports, or combinations of these methods, as appropriate.",
      "severity": "medium"
    },
    {
      "id": "V-81373",
      "title": "The WebSphere Application Server DoD root CAs must be in the trust store.",
      "description": "This control focuses on communications protection at the session, versus packet level.\n\nAt the application layer, session IDs are tokens generated by web applications to uniquely identify an application user's session. Web applications utilize session tokens or session IDs in order to establish application user identity. Proper use of session IDs addresses man-in-the-middle attacks, including session hijacking or insertion of false information into a session.\n\nApplication servers must provide the capability to perform mutual authentication. Mutual authentication is when both the client and the server authenticate each other.",
      "severity": "medium"
    },
    {
      "id": "V-81375",
      "title": "The WebSphere Application Server personal certificates in all keystores must be issued by an approved DoD CA.",
      "description": "Untrusted Certificate Authorities (CA) can issue certificates, but they may be issued by organizations or individuals that seek to compromise DoD systems or by organizations with insufficient security controls. If the CA used for verifying the certificate is not a DoD-approved CA, trust of this CA has not been established.\n\nThe DoD will only accept PKI certificates obtained from a DoD-approved internal or external certificate authority. Reliance on CAs for the establishment of secure sessions includes, for example, the use of SSL/TLS certificates. The application server must only allow the use of DoD PKI-established certificate authorities for verification.",
      "severity": "medium"
    },
    {
      "id": "V-81377",
      "title": "The WebSphere Application Server must be configured to perform complete application deployments when using A/B clusters.",
      "description": "Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system.\n\nWhen an application is deployed to the application server, if the deployment process does not complete properly and without errors, there is the potential that some application files may not be deployed or may be corrupted and an application error may occur during runtime.\n\nThe application server must be able to perform complete application deployments. A partial deployment can leave the server in an inconsistent state. Application servers may provide a transaction rollback function to address this issue.",
      "severity": "low"
    },
    {
      "id": "V-81379",
      "title": "The WebSphere Application servers with an RMF categorization of high must be in a high-availability (HA) cluster.",
      "description": "This requirement is dependent upon system MAC and confidentiality. If the system MAC and confidentiality levels do not specify redundancy requirements, this requirement is NA.\n\nFailure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. When application failure is encountered, preserving application state facilitates application restart and return to the operational mode of the organization with less disruption of mission/business processes.\n\nClustering of multiple application servers is a common approach to providing fail-safe application availability when system MAC and confidentiality levels require redundancy.\n\nSatisfies: SRG-APP-000225-AS-000154, SRG-APP-000435-AS-000069",
      "severity": "low"
    },
    {
      "id": "V-81381",
      "title": "The WebSphere Application Server must not generate LTPA keys automatically.",
      "description": "Automated LTPA key generation can create unplanned outages. Plan to change your LTPA keys during a scheduled outage. Distribute the new keys to all nodes in the cell and to all external systems/cells during this outage window.",
      "severity": "low"
    },
    {
      "id": "V-81383",
      "title": "The WebSphere Application Server must periodically regenerate LTPA keys.",
      "description": "The encryption of authentication information that is exchanged between servers involves the Lightweight Third-Party Authentication (LTPA) mechanism. LTPA utilizes encryption keys, if LTPA is utilized, the LTPA keys must be regenerated on a regular basis. The time period must be defined, documented and accepted by the ISSO but must be performed at least annually.\n\nNote: If LTPA keys are shared across cells, you must export the keys from the cell where the keys have been regenerated, and import into the cells whose keys have not changed. Instructions for managing the LTPA keys is provided here: https://www.ibm.com/support/knowledgecenter/en/SSAW57_9.0.0/com.ibm.websphere.nd.multiplatform.doc/ae/tsec_sslmanagelptakeys.html",
      "severity": "low"
    },
    {
      "id": "V-81385",
      "title": "The WebSphere Application Server high availability applications must be installed on a cluster.",
      "description": "DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity. To reduce the possibility or effect of a DoS, the application server must employ defined security safeguards. These safeguards will be determined by the placement of the application server and the type of applications being hosted within the application server framework.\n\nThere are many examples of technologies that exist to limit or, in some cases, eliminate the effects of DoS attacks (e.g., limiting processes or restricting the number of sessions the application opens at one time). Employing increased capacity and bandwidth, combined with service redundancy or clustering, may reduce the susceptibility to some DoS attacks.",
      "severity": "medium"
    },
    {
      "id": "V-81387",
      "title": "The WebSphere Application Server memory session settings must be defined according to application load requirements.",
      "description": "DoS is a condition when a resource is not available for legitimate users. When this occurs, the organization either cannot accomplish its mission or must operate at degraded capacity. To reduce the possibility or effect of a DoS, the application server must employ defined security safeguards. These safeguards will be determined by the placement of the application server and the type of applications being hosted within the application server framework.\n\nThere are many examples of technologies that exist to limit or, in some cases, eliminate the effects of DoS attacks (e.g., limiting processes or restricting the number of sessions the application opens at one time). Employing increased capacity and bandwidth, combined with service redundancy or clustering, may reduce the susceptibility to some DoS attacks.",
      "severity": "low"
    },
    {
      "id": "V-81389",
      "title": "The WebSphere Application Server thread pool size must be defined according to application load requirements.",
      "description": "A thread pool enables components of the application server to reuse threads, which eliminates the need to create new threads at run time. Creating new threads expends system resources and can possibly lead to a DoS. Perform loading for your application to determine the required thread pool sizes.",
      "severity": "medium"
    },
    {
      "id": "V-81391",
      "title": "The WebSphere Application Server must remove all export ciphers to protect the confidentiality and integrity of transmitted information.",
      "description": "Export grade encryption suites are not strong and do not meet DoD requirements. The encryption for the session becomes easy for the attacker to break. Do not use export grade encryption. Information on disabling export ciphers can be found in Knowledge Center at this link: http://www.ibm.com/support/knowledgecenter/SS7K4U_8.5.5/com.ibm.websphere.ihs.doc/ihs/rihs_ciphspec.html",
      "severity": "medium"
    },
    {
      "id": "V-81393",
      "title": "The WebSphere Application Server distribution and consistency services (DCS) transport links must be encrypted.",
      "description": "A Core Group (HA Domain) is a component of the high availability manager function. It can contain stand-alone servers, cluster members, node agents, administrative agents, and the deployment manager. \n\nCore groups rely on DCS, which uses a reliable multicast message (RMM) system for transport. RMM can use one of several wire transport technologies. Depending on your environment, sensitive information might be transmitted over DCS. For example, data in DynaCache and the security subject cache are transmitted using DCS. To ensure this, select a transport type of channel framework and DCS-Secure as channel chain for each core group.\n\nBe aware that DCS always authenticates messages when global security is enabled. Once the transport is encrypted, you then have a highly secure channel.\n\nOnce you have done this, all services that rely on DCS are now using an encrypted and authenticated transport. Those services are DynaCache, memory-to-memory session replication, core groups, Web services caching, and stateful session bean persistence.",
      "severity": "medium"
    },
    {
      "id": "V-81395",
      "title": "The WebSphere Application Server plugin must be configured to use HTTPS only.",
      "description": "The Web server plug-in transmits information from the Web server to the Web container over HTTP by default. Extra steps must be taken to protect the traffic from the Web server to the Web container. To force the use of HTTPS for all traffic from the plug-in, disable the HTTP transport from the Web container on every application server and then regenerate and deploy the plug-in. WCInboundDefault and the HttpQueueInboundDefault transport chains must be disabled. At which time the plug-in can only use HTTPS and so it will use it for all traffic regardless of how the traffic arrived at the Web container.",
      "severity": "medium"
    },
    {
      "id": "V-81397",
      "title": "The WebSphere Application Server must remove organization-defined software components after updated versions have been installed.",
      "description": "By default, when updating WebSphere application server, the older version of binaries are saved in case a \"roll back\" is necessary. Not keeping the older version makes it more difficult for attackers to \"revert\" back to the older version.",
      "severity": "medium"
    },
    {
      "id": "V-81399",
      "title": "The WebSphere Application Server must apply the latest security fixes.",
      "description": "Security vulnerabilities are often addressed by testing and applying the latest security patches and fix packs. Latest fixpacks can be found at: http://www-01.ibm.com/support/docview.wss?uid=swg27009661",
      "severity": "medium"
    },
    {
      "id": "V-81401",
      "title": "The WebSphere Application Server must install security-relevant software updates within the time period directed by an authoritative source (e.g., IAVMs, CTOs, DTMs, and STIGs).",
      "description": "Security flaws with software applications are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes) to production systems after thorough testing of the patches within a lab environment. Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously.",
      "severity": "medium"
    }
  ]
}