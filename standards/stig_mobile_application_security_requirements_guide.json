{
  "name": "stig_mobile_application_security_requirements_guide",
  "date": "2014-07-22",
  "description": "The Mobile Application Security Requirements Guide (SRG) is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the NIST 800-53 and related documents. Comments or proposed revisions to this document should be sent via e-mail to the following address: disa.letterkenny.FSO.mbx.stig-customer-support-mailbox@mail.mil.",
  "title": "Mobile Application Security Requirements Guide",
  "version": "2",
  "item_syntax": "^\\w-\\d+$",
  "section_separator": null,
  "items": [
    {
      "id": "SRG-APP-000033-MAPP-000010",
      "title": "The mobile app must not modify, request, or assign values for operating system parameters unless necessary to perform application functions.",
      "description": "A mobile app that operates with the privileges of its host OS is vulnerable to integrity issues and escalated privileges that would affect the entire platform and device. If the app is able to obtain OS privileges greater than necessary for proper operation, then an adversary is able to breach the app, has access to these additional privileges, and can perform unauthorized functions. These functions might include the ability to read sensitive data or execute unauthorized code. If the latter, then additional attacks on the system and DoD networks may be possible. Prohibiting an app from assigning itself unnecessary privileges greatly mitigates the risk of unauthorized use of those privileges.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000033-MAPP-000011",
      "title": "The mobile app must not execute as a privileged operating system process unless necessary to perform any app functions.",
      "description": "A mobile app that operates with the privileges of its host OS will make the OS, device, and other apps vulnerable to such issues as escalated privileges that would affect the entire platform and device. If the app is able to obtain OS privileges greater than necessary for proper operation, then an adversary able to breach the app has access to these additional privileges and can perform unauthorized functions. These functions might include the ability to read sensitive data, or execute unauthorized code. If the latter, then additional attacks on the system and DoD networks may be possible. In applying this control, the device and data are protected against attacks that would be easily executed by a malicious user who has gained numerous privileges.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000033-MAPP-000012",
      "title": "A mobile app must not call APIs or otherwise invoke resources external to the mobile app unless such activity serves the documented purposes of the mobile app.",
      "description": "A mobile app that does not operate within what should be appropriate limits will expose the device and all stored data inadvertently to non-secure domains, as well as provide a path for a malicious intruder to access the device and the data stored in it. If the mobile app calls APIs outside of its purpose, it could potentially perform unauthorized functions. These might include revealing the location of the user, obtaining data from the user's contact database, or other unauthorized functions. This control limits the API set and mitigates the risk that unauthorized actions are taking place with the app that could compromise the dataâ€™s confidentiality, as well as the user's safety and mission.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000057-MAPP-000017",
      "title": "The mobile app must enforce organization-defined limitations on the embedding of data types within other data types.",
      "description": "Information flow control regulates where information is allowed to travel within an information system and between information systems (as opposed to who is allowed to access the information) and without explicit regard to subsequent accesses to that information. Information flow enforcement mechanisms compare security attributes on all information (data content and data structure), source and destination objects, and respond appropriately (e.g., block, quarantine, alert administrator) when the mechanisms encounter information flows not explicitly allowed by the information flow policy. Embedding of data within other data is often used for the surreptitious transfer of data. For example, embedding data within an image file (e.g., .jpg) is referred to as steganography and is used to circumvent protections in place to protect information.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000133-MAPP-000030",
      "title": "The mobile app must not enable other applications or non-privileged processes to modify software libraries.",
      "description": "Many apps leverage software libraries to perform app functions. If the app makes these library files world writeable or otherwise allows unauthorized changes, then other processes on the device could modify the library to give the app capabilities it did not have originally. These capabilities might enable the app to exfiltrate sensitive DoD information or permit privilege escalation, possibly leading to attacks on additional systems. Libraries could be modified through enabling other apps to do so or through the app itself allowing the user to do so. Implementing this control prevents apps from acquiring capabilities for which they were not originally authorized. Please refer to CWEs: 250, 265, 272, and 284. The MAPP SRG Overview contains additional information on the use of CWEs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000141-MAPP-000031",
      "title": "The mobile app must not include source code, unreferenced code or subroutines that are never invoked during operation, except for software components and libraries from approved third-party products.",
      "description": "Unused software and libraries increase a program size without any benefits and furthermore, may contain malicious code that would be later executed, and compromise the app and all stored data. Typically, unknown code cannot be evaluated as it is never executed during run time and thus it is not fully known that it is present until malicious action takes place. Implementing this control mitigates the risk of dormant code executing at an opportune moment, allowing itself privileges and compromising the integrity and confidentiality of all stored data on the device. Please refer to CWEs: 398, 478, 561, 563, 570, and 571 for further information. The MAPP SRG Overview contains additional information on the use of CWEs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000142-MAPP-000032",
      "title": "The mobile app must utilize ports or protocols in a manner consistent with DoD Ports and Protocols guidance.",
      "description": "Failure to comply with DoD Ports, Protocols Services Management (PPSM) Category Assurance List (CAL) and associated vulnerability assessments may result in compromise of mobile protections or functionality of the app. Ports that are incorrectly used leave the app and device vulnerable to exposure from attacks that exploit ports that are open, are not used, and have no protection. This control assures that all application ports, protocols, and services needed for the app operation are in compliance with the DoD PPSM guidance. Implementing this control also mitigates the threat from malicious exploitation of open and unprotected ports that can lead to data integrity and confidentiality risks.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000225-MAPP-000047",
      "title": "The mobile app must fail to an initial state when the application unexpectedly terminates, unless it maintains a secure state at all times.",
      "description": "An app maintains a secure state when there is strong assurance that each of its state transitions is consistent with the app's security policy. For many mobile apps, the only state for which the state is known to be compliant is the initial state because it does not have a documented security policy regarding state transitions. An app could be compromised, providing an attack vector to the app and OS if initialization, shutdown, and aborts are not designed to keep the app in a secure state. If the app fails without closing or shutting down processes or open sessions; authentication and validation mechanisms are considered weak and do not provide sufficient protection against unauthorized access to the application and all stored data. In applying this control, the app can be secured to its initial level of security in the event the app crashes or terminates. This will mitigate the threat of an unauthorized user taking control of the device and accessing the app and stored data, compromising its integrity and confidentiality.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000243-MAPP-000049",
      "title": "The mobile app must not write data to persistent memory accessible to other applications.",
      "description": "Persistent memory is memory that retains data even when the device is no longer powered on. It is often referred to as non-volatile memory and is typically used for file storage. If the app shares the same location of persistent memory with that used by other apps to include encrypted data, then the data is at great risk to exposure through being available to other apps after the app has shut down or a user session has terminated. Furthermore, even though the OS will always be able to read files, other apps that share the same persistent memory are potentially less secure and thus offer an accessible means for malicious intruders to retrieve this information through the other app. In many operating environments, assigning unique process IDs to each app facilitates their separation from one another. In applying this control, the user will be less susceptible to malicious intrusion and extrusion of data that resides in areas shared by other apps.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000267-MAPP-000060",
      "title": "The mobile app must not transmit error messages to any entity other than authorized audit logs, the MDM, or the device display.",
      "description": "Error messages that are transmitted outside of the app environment reveal weaknesses in the app that will offer the potential for exposure to malicious users. By default many error messages contain data pertaining to the session, the ports, and user and in some instances, their authentication credentials. Through this control, any issues that an app may have are restricted to the user and the personnel who have access to audit logs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000342-MAPP-000100",
      "title": "The mobile app must prevent organization-defined software from executing at higher privilege levels than users executing the software.",
      "description": "In certain situations, software applications/programs need to execute with elevated privileges to perform required functions. However, if the privileges required for execution are at a higher level than the privileges assigned to organizational users invoking such applications/programs, those users are indirectly provided with greater privileges than assigned by organizations.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000372-MAPP-000100",
      "title": "The mobile app must synchronize internal information system clocks to the MOS-based authoritative time source.",
      "description": "Inaccurate time stamps make it more difficult to correlate events and can lead to an inaccurate analysis. Determining the correct time a particular event occurred on a system is critical when conducting forensic analysis and investigating system events. \n\nSynchronizing internal information system clocks provides uniformity of time stamps for information systems with multiple system clocks and systems connected over a network. Organizations should consider setting time periods for different types of systems (e.g., financial, legal, or mission-critical systems). Organizations should also consider endpoints that may not have regular access to the authoritative time server (e.g., mobile, teleworking, and tactical endpoints). This requirement is related to the comparison done every 24 hours in CCI-001891 because a comparison must be done in order to determine the time difference.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000381-MAPP-000010",
      "title": "The mobile app must not change the file permissions of any files other than those dedicated to its own operation.",
      "description": "A file's access level is pivotal to a mobile app and its data's security. The modification of a file's permission must be strictly controlled in an effort to maintain the integrity and confidentially of the data stored. If the file permissions are easily changed, attackers will try to gain any possible level of access and then try to escalate that level until they are able to obtain restricted data or make unapproved system modifications. This control mitigates the risk of privilege escalation by an unauthorized process or user resulting in data integrity and confidentiality issues. Please refer to CWEs: 250, 265, 272, and 284. The MApp SRG Overview contains additional information on the use of CWEs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000388-MAPP-000100",
      "title": "The mobile app, when  conditions defined in CCI-0002856, CP-12 are detected, must enter a safe mode of operation defined in CCI-0002857, CP-12.",
      "description": "Configuring the app to revert to a predetermined safe mode of operation helps ensure continuity of critical operations during adverse conditions.\n\nFor apps supporting mission-critical functions, including military operations and weapons systems (especially real-time operational environments), organizations may choose to identify certain conditions under which the app will revert to a predetermined safe mode of operation. The safe mode of operation, which can be activated automatically or manually, restricts the types of app functions/commands that can be performed when those conditions are encountered. Restrictions include, for example, allowing only certain functions that could be carried out under limited power or with reduced communications bandwidth.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000391-MAPP-000100",
      "title": "The mobile app must accept Public Key Infrastructure (PKI) credentials.",
      "description": "The use of PKI credentials facilitates standardization and reduces the risk of unauthorized access.\n\nThe DoD has mandated the use of the CAC to support identity management and personal authentication for systems covered under HSPD 12, as well as a primary component of layered protection for national security systems.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000392-MAPP-000100",
      "title": "The mobile app must electronically verify Personal Identity Verification (PIV) credentials.",
      "description": "The use of PIV credentials facilitates standardization and reduces the risk of unauthorized access.\n\nThe DoD has mandated the use of the CAC to support identity management and personal authentication for systems covered under HSPD 12, as well as a primary component of layered protection for national security systems.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000393-MAPP-000100",
      "title": "The mobile app must implement organization-defined out-of-band authentication under organization-defined conditions.",
      "description": "Out-of-band authentication uses two separate networks or channels to communicate between two parties or devices. For example, a user can access a site through a network connection, and a one-time password can be sent through a cellular network to that user's mobile device. This reduces the probability of the authentication process being compromised.\n\nThis type of authentication can be employed by organizations to mitigate actual or suspected man-in the-middle attacks. The conditions for activation can include, for example, suspicious activities, new threat indicators or elevated threat levels, or the impact level or classification level of information in requested transactions.\n\nOut-of-band authentication (OOBA) refers to the use of two separate communication paths to identify and authenticate users or devices to an information system.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000416-MAPP-000100",
      "title": "The mobile app must implement NSA-approved cryptography to protect classified information in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards.",
      "description": "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The app must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000439-MAPP-000100",
      "title": "The mobile app must protect the confidentiality and integrity of transmitted information.",
      "description": "Without protection of the transmitted information, confidentiality and integrity may be compromised since unprotected communications can be intercepted and either read or altered. \n\nCommunication paths outside the physical protection of a controlled boundary are exposed to the possibility of interception and modification. Protecting the confidentiality and integrity of organizational information can be accomplished by physical means (e.g., employing physical distribution systems) or by logical means (e.g., employing cryptographic techniques). If physical means of protection are employed, then logical means (cryptography) do not have to be employed, and vice versa.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000449-MAPP-000100",
      "title": "The mobile app must validate information output from software programs and/or applications defined in SI-15, CCI-0002770 to ensure the information is consistent with the expected content.",
      "description": "Certain types of cyber attacks (e.g., SQL injections) produce output results that are unexpected or inconsistent with the output results that would normally be expected from software programs or applications. This requirement focuses on detecting extraneous content, preventing such extraneous content from being displayed, and alerting monitoring tools that anomalous behavior has been discovered.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000514-MAPP-000100",
      "title": "If the underlying MOS does not provide NIST FIPS-validated crypto modules, the mobile app must implement NIST FIPS-validated cryptography for the following: to provision digital signatures; to generate cryptographic hashes; and to protect unclassified information requiring confidentiality and cryptographic protection in accordance with applicable federal laws, Executive Orders, directives, policies, regulations, and standards.",
      "description": "Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The app must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000034",
      "title": "The mobile app must not lock or set permissions on application files in a manner such that the operating system or an approved backup application cannot copy the files.",
      "description": "If the app is able to lock files or modify file permissions in a manner that prevents higher-level system operations, such as backup and copying from taking place, then the potential exists for the data to be lost. This condition may also be a form of denial of service if the operating system cannot recover the locked areas, thereby leaving fewer resources for other processes. In applying this control, the system is able to perform its overarching control and functional procedures, above any privileges the app, the user, or an intruder may have. The control must be employed judiciously. For example, file access should not be so broad as to allow non-approved apps from reading the files (e.g., by setting files to world readable).",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000038",
      "title": "Mobile apps involved in the production, control, and distribution of symmetric cryptographic keys must use NIST approved or NSA approved key management technology and processes.",
      "description": "Symmetric cryptographic keys must be managed according to approved processes using approved technology, to ensure malicious intruders do not take advantage of any network resource exposure that may occur as a result of non-standard practices and tools being applied. If non-standard practices are applied to production, control, and distribution of symmetric cryptographic keys, then the DoD is potentially vulnerable to attack from adversaries who are able to exploit weak encryption keys that have been used by the app and system. This control assures the DoD a much higher degree of assurance that intruders will not gain access to the network through weaknesses that are mitigated or eradicated through best and approved practices and key management technologies.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000039",
      "title": "Mobile apps involved in the production, control, and distribution of asymmetric cryptographic keys must use NIST approved or NSA approved key management technology and processes.",
      "description": "Asymmetric cryptographic keys must be managed according to approved processes using approved technology, to ensure malicious intruders do not take advantage of any network resource exposure that may occur as a result of non-standard practices and tools being applied. If non-standard practices are applied to production, control, and distribution of asymmetric cryptographic keys, then the DoD is potentially vulnerable to attack from adversaries who are able to exploit weak encryption keys that have been used by the app and system. In applying this control, the DoD can be assured of a much higher degree of assurance that intruders will not gain access to the network through weaknesses that are mitigated or eradicated through best and approved practices and key management technologies.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000040",
      "title": "Mobile apps involved in the production, control, and distribution of asymmetric cryptographic keys must use approved PKI Class 3 certificates or prepositioned keying material.",
      "description": "Class 3 certificates are issued to individuals, organizations, servers, devices, and administrators for CAs and root authorities (RAs). Class 3 certificates undergo independent verification and checking of identity and authority which is performed by the issuing (CA). Networks and applications not using Class 3 Certificates are vulnerable to a multiple of malicious attacks that would essentially allow unauthorized access to and intrusion in a network. Similarly, using approved PKI class 3 certificates ensure malicious intruders do not take advantage of any network resource exposure that may occur as a result of non-standard practices and tools being applied. In applying this control, the use of approved PKI Class 3 certificates will assure authentication, message, data and content integrity, and confidentiality encryption.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000041",
      "title": "Mobile apps involved in the production, control, and distribution of asymmetric cryptographic keys must use approved PKI Class 3 or class 4 certificates and hardware tokens that protect the user's private key.",
      "description": "Class 3 and 4 certificates are issued by individuals, organizations, servers, devices, and administrators for CAs and root authorities (RAs). A hardware token offers an additional layer of security in addition to a password. Networks and applications not using hardware tokens to protect the private Class 3 certificates are vulnerable to a multiple of malicious attacks that would essentially allow unauthorized access and intrusion in a network. Networks and applications not using Class 3 and 4 certificates and hardware tokens are vulnerable to a multiple of malicious attacks that would essentially allow unauthorized access to and intrusion in a network. Similarly, using approved PKI class 3/4 certificates and hardware tokens, ensure malicious intruders do not take advantage of any network resource exposure that may occur as a result of non-standard practices and tools being applied. Users of Class 3/4 certificates, as well as hardware tokens, will be assured of an extra level of security that will protect their certificates and the user's private key. The DoD CAC is an example of a compliant solution.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000064",
      "title": "The mobile app code must not contain hardcoded references to resources external to the app.",
      "description": "Hardcoded resources include URLs and path references to files outside of the app environment.  An adversary who is aware of such references can attack the app by breaching the external resource it calls. In most cases, such references may be placed in configuration files that may be updated when the resource reference is no longer valid.  This also makes such references more transparent than they would be if they remained embedded in app code.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000065",
      "title": "The mobile app must remove temporary files when it terminates.",
      "description": "Temporary files left on the system after an app has terminated may contain sensitive information.  Such sensitive information includes authentication credentials or session identifiers that would enable an adversary to gain unauthorized access to other resources. Removing such files when an app terminates greatly mitigates the risk of this attack that would exploit these files and use them to re-launch the app, enjoy user privileges or breach the confidentiality or integrity of the data stored on the device.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000066",
      "title": "The mobile app must remove cookies or information used to track a users identity when it terminates.",
      "description": "If the app does not remove temporary data, such as authentication data, temporary files containing sensitive data, and cookies, the data can be used again if the device is lost or stolen.  Such information could also be used to track the user across app sessions or even across different apps, which poses an OPSEC risk.  The temporary data could be used to reauthenticate the user or allow unauthorized access to sensitive data. Removing cookies assures the DoD greater security from intruders and unauthorized users accessing the temporary data and using it to potentially access the system, accessing sensitive data and compromising sensitive data's integrity.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000067",
      "title": "The mobile app must clear or overwrite memory blocks used to process potentially sensitive data. Sensitive data may include PII,  a user's location, or authentication credentials.",
      "description": "Sensitive data in memory should be cleared or overwritten to protect data that may be available to an attacker seeking ways to gain access to data that otherwise appears erased.  Unless an app can overwrite memory blocks, the possibility exists for an attacker to cause the app to crash and analyze a memory dump of the app for sensitive information.  Clearing memory will ensure the DoD the app can operate more securely, with greater protection applied to sensitive data that will be properly removed when no longer required.   Additional overwriting requirements may be applicable to classified apps.  Please refer to CWEs: 14, 226, 244, and 591 for further information.  The MAPP SRG Overview contains additional information on the use of CWEs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000068",
      "title": "The mobile app must not be vulnerable to integer arithmetic vulnerabilities.",
      "description": "Integer overflows occur when an integer has not been properly checked and is used in memory allocation, copying, and concatenation.  Also, when incrementing integers past their maximum possible value, it could potentially become a very small or negative number.  Integer overflows can lead to infinite looping when loop index variables are compromised and cause a denial of service.  If the integer is used in data references, the data can become corrupt.  Also, using the integer in memory allocation can cause buffer overflows and a denial of service.  Integers used in access control mechanisms can potentially trigger buffer overflows, which can be used to execute arbitrary code.  Removing integer arithmetic vulnerabilities mitigates the risk of multiple vulnerabilities to include denial of service to the app and the execution of arbitrary code.  Please refer to CWEs: 125, 126, 190, 195, 197, 398, 787, and 805 for further information.  The MAPP SRG Overview contains additional information on the use of CWEs.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000069",
      "title": "The mobile app must not call functions vulnerable to buffer overflows.",
      "description": "Buffer overflow attacks occur when improperly validated input is passed to an app overwriting memory.  Buffer overflow errors stop execution of the app causing a minimum of denial of service and possibly a system call to a command shell giving an attacker access to the underlying operating system.  An app that avoids buffer flow situations assures the DoD greater availability of the app due to better security against DoS attacks.  Please refer to CWEs: 20, 74, 78, 88, 117, 119, 120, 125, 129, 131, 134, 135, 170, 170, 176, 193, 195, 242, 249, 250, 251, 265, 415, 560, 686, 733, 787, and 805 for further information.  The MAPP SRG Overview contains additional information on the use of CWEs. Further information on testing for buffer overflows can be seen at https://www.owasp.org/index.php/Reviewing_Code_for_Buffer_Overruns_and_Overflows.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000071",
      "title": "The mobile app must not be vulnerable to race conditions.",
      "description": "A race condition occurs when an app receives two or more actions on the same resource in an unanticipated order which causes a conflict.   Sometimes, the resource is locked by different users or functions within the app, creating a deadlock situation.  Racing can occur when the design uses global variables in place of local variables, or a multi-threaded app does not use thread safe functions when threads are accessing the same object or data, as two examples.  Applying this control, the DoD is protected against situations that would reduce the security posture of the app, device, data, and network as a result of security-related components not able to function as a result of the race condition.  Furthermore, the user is also protected against access and availability issues that result from the app or certain components of the app from functioning correctly as a result of the race condition.  Examples of race conditions vulnerabilities can be obtained from the OWASP website at https://www.owasp.org.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000073",
      "title": "The mobile app must initialize all parameter values on startup.",
      "description": "A mobile app could be compromised, providing an attack vector to it if the app initialization process is not designed to keep the app in both a secure and functional state.  Any operating parameter in the app, such as variables and settings, must be reset and initialized to default values, otherwise an adversary in possession of the device could access the app with privileges. An app that re-initializes its parameters at start up is assured a more secure session since the app has initialized all functional components that allow it to operate properly and thus securely.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000075",
      "title": "The mobile app must not record or forward sensor data unless explicitly authorized to do so.",
      "description": "Sensors include the GPS, gyroscope, accelerometer, camera, and microphone.  When sensor data is either recorded locally or sent to a remote server, the potential exists for an adversary to obtain sensitive information that could be used to harm the user or compromise information systems.  In particular, when location data is forwarded, the user may be physically targeted.  User safety and mission assurance risks are mitigated when sensor data is only collected or forwarded when expressly authorized.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000077",
      "title": "The mobile app source code must not contain adware or known malware.",
      "description": "Malware will compromise the app data, device, and system.   Under no circumstances will any code that is known to contain adware or malware be used. The entire application ecosystem will operate at a higher security with much higher integrity than a system with known malware.",
      "severity": "medium"
    },
    {
      "id": "SRG-APP-000516-MAPP-000078",
      "title": "Unless the MOS manages app signing, the mobile app installation package must be digitally signed in accordance with FIPS 186-3 approved methods.",
      "description": "One of the biggest risks on a mobile device is that it will execute malware that will compromise sensitive data on the device or enable subsequent attacks on other DoD information systems.    One of the most effective means for preventing malware execution is to authenticate that software comes from a trusted source before it is installed. Digital signatures on software can be used to authenticate that the software comes from a trusted source.   Signing the software in accordance with FIPS 186-3 provides additional assurance that the signature was affixed properly.",
      "severity": "medium"
    }
  ]
}