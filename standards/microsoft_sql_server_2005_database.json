{
  "name": "microsoft_sql_server_2005_database",
  "date": "2015-06-16",
  "description": "The Microsoft SQL Server 2005 Database Security Technical Implementation Guide (STIG) is published as a tool to improve the security of Department of Defense (DoD) information systems. Comments or proposed revisions to this document should be sent via e-mail to the following address: disa.stig_spt@mail.mil.",
  "title": "Microsoft SQL Server 2005 Database Security Technical Implementation Guide",
  "version": "8",
  "item_syntax": "^\\w-\\d+$",
  "section_separator": null,
  "items": [
    {
      "id": "V-15128",
      "title": "DBMS application user roles should not be assigned unauthorized privileges.",
      "description": "Unauthorized access to the data can lead to loss of confidentiality and integrity of the data.",
      "severity": "medium"
    },
    {
      "id": "V-15142",
      "title": "Asymmetric keys used by the DBMS for encryption of sensitive data should use DoD PKI Certificates. Private keys used by the DBMS should be protected in accordance with NIST (unclassified data) or NSA (classified data) approved key management and processes.",
      "description": "Encryption is only effective if the encryption method is robust and the keys used to provide the encryption are not easily discovered. Without effective encryption, sensitive data is vulnerable to unauthorized access.",
      "severity": "medium"
    },
    {
      "id": "V-15151",
      "title": "Fixed Database roles should have only authorized users or groups as members.",
      "description": "Fixed database roles provide a mechanism to grant groups of privileges to users. These privilege groupings are defined by the installation or upgrade of the SQL Server software at the discretion of Microsoft. Memberships in these roles granted to users should be strictly controlled and monitored. Privileges assigned to these roles should be reviewed for change after software upgrade or maintenance to ensure that the privileges continue to be appropriate to the assigned members.",
      "severity": "medium"
    },
    {
      "id": "V-15159",
      "title": "The Database Master key encryption password should meet DoD password complexity requirements.",
      "description": "Weak passwords may be easily guessed. When passwords used to encrypt keys used for encryption of sensitive data, then the confidentiality of all data encrypted using that key is at risk.",
      "severity": "medium"
    },
    {
      "id": "V-15161",
      "title": "The Database Master Key should be encrypted by the Service Master Key where required.",
      "description": "Protection of the Database Master Key is necessary to protect the confidentiality of sensitive data. When encrypted by the Service Master Key, SYSADMINs may access and use the key to view sensitive data that they are not authorized to view. Where alternate encryption means are not feasible, encryption by the Service Master Key may be necessary. To help protect sensitive data from unauthorized access by DBA's, mitigations may be in order. Mitigations may include automatic alerts or other audit events when the database master key is accessed outside of the application or by a DBA account.",
      "severity": "medium"
    },
    {
      "id": "V-15162",
      "title": "Database Master Key passwords shoud not be stored in credentials within the database.",
      "description": "Storage of the database master key password in a database credential allows decryption of sensitive data by privileged users who may not have a need-to-know requirement to access the data.",
      "severity": "medium"
    },
    {
      "id": "V-15164",
      "title": "Asymmetric keys should be derived from DoD PKI certificates.",
      "description": "Asymmetric keys derived from self-signed certificates or self-generated by other means do not meet the security requirements of DOD that require validation by DOD trusted certificate authorities.",
      "severity": "medium"
    },
    {
      "id": "V-15168",
      "title": "Symmetric keys should use a master key, certificate, or asymmetric key to encrypt the key.",
      "description": "Symmetric keys are vulnerable if the symmetric key encryption is not protected from disclosure. Symmetric keys are well protected by use of either the database or the service master key. Where access by DBA's is not acceptable, use of the application code-signing certificate can be used to provide protection.",
      "severity": "medium"
    },
    {
      "id": "V-15172",
      "title": "Object permissions should not be assigned to PUBLIC or GUEST.",
      "description": "The guest account is available to users that do not have authorized accounts on the database. The PUBLIC role is granted to all users of the database regardless of assigned job function. Assignment of object privileges to unauthorized users can compromise data integrity and/or confidentiality.",
      "severity": "medium"
    },
    {
      "id": "V-15177",
      "title": "The Service Master Key should be backed up, stored offline and off site.",
      "description": "Backup and recovery of the Service Master Key may be critical to the complete recovery of the database.",
      "severity": "medium"
    },
    {
      "id": "V-15185",
      "title": "Asymmetric private key encryption should use an authorized encryption type.",
      "description": "Asymmetric keys stored in the database that also include storage of the private key require protection from any unauthorized user. To protect unauthorized access and use of any asymmetric key by DBA's or users with SYSADMIN privileges, a password must be used to encrypt the private key. Use of the Database Master Key or Service Master Key allows access by the DBA. Consider the protection requirements for asymmetric key usage and document this in the System Security Plan. Avoid storage of static asymmetric private keys that is keys not generated and maintained for temporary session or other temporary usage, in the database.",
      "severity": "medium"
    },
    {
      "id": "V-15607",
      "title": "Application objects should be owned by accounts authorized for ownership.",
      "description": "Database object ownership implies full privileges to the owned object including the privilege to assign access to the owned objects to other subjects. Unmanaged or uncontrolled ownership of objects can lead to unauthorized object grants and alterations.",
      "severity": "medium"
    },
    {
      "id": "V-15629",
      "title": "Application users privileges should be restricted to assignment using application user roles.",
      "description": "Privileges granted outside the role of the application user job function are more likely to go unmanaged or without oversight for authorization. Maintenance of privileges using roles defined for discrete job functions offers improved oversight of application user privilege assignments and helps to protect against unauthorized privilege assignment.",
      "severity": "medium"
    },
    {
      "id": "V-15630",
      "title": "Access to sensitive data should be restricted to authorized users identified by the Information Owner.",
      "description": "Unauthorized access to sensitive data can lead to unauthorized disclosure, modification or accountability. Access to sensitive data that is granted that is not restricted at all levels based on job function may be exploited regardless of attempts to control. An example of this is a web application that serves general users, but that access sensitive data in a backend database using an account with elevated privileges. This provides a means for the web application user to exploit the application to gain unauthorized access to data in the database. Where the user never has access to a path with excess privileges, unauthorized access is more difficult to gain.",
      "severity": "medium"
    },
    {
      "id": "V-15642",
      "title": "Access grants to sensitive data should be restricted to authorized user roles.",
      "description": "Unauthorized access to sensitive data may compromise the confidentiality of personnel privacy, threaten national security or compromise a variety of other sensitive operations. Access controls are best managed by defining requirements based on distinct job functions and assigning access based on the job function assigned to the individual user.",
      "severity": "medium"
    },
    {
      "id": "V-15654",
      "title": "DBMS symmetric keys should be protected in accordance with NSA or NIST-approved key management technology or processes.",
      "description": "Symmetric keys used for encryption protect data from unauthorized access. However, if not protected in accordance with acceptable standards, the keys themselves may be compromised and used for unauthorized data access.",
      "severity": "medium"
    },
    {
      "id": "V-15657",
      "title": "Changes to DBMS security labels should be audited.",
      "description": "Some DBMS systems provide the feature to assign security labels to data elements. The confidentiality and integrity of the data depends upon the security label assignment where this feature is in use. Changes to security label assignment may indicate suspicious activity.",
      "severity": "medium"
    },
    {
      "id": "V-2451",
      "title": "The guest user account should be disabled.",
      "description": "The guest user ID in a database allows access by all Windows login IDs without requiring an individual database account. This allows unauthorized access to the database.",
      "severity": "medium"
    },
    {
      "id": "V-2457",
      "title": "Object permission assignments should be authorized.",
      "description": "Securely designed applications require only that database application user accounts have permissions to access and manipulate only the application data assigned to them in accordance with the their job function. Restrictions may be further restricted by granting data access to users only through execution of database procedures. Excess privileges can lead to unauthorized data access and can compromise data integrity.",
      "severity": "medium"
    },
    {
      "id": "V-2458",
      "title": "Permissions on system tables should be restricted to authorized accounts.",
      "description": "Microsoft SQL Server defaults to allow all users to view the majority of the system tables. The system tables contain information such as login IDs, permissions, objects and even the text of all stored procedures. In a secure environment, any direct access granted to these tables by users bypasses security controls defined within the associated system procedures and views. The bypass of these controls can lead to unauthorized viewing of sensitive data.",
      "severity": "medium"
    },
    {
      "id": "V-2463",
      "title": "DDL permissions should be granted only to authorized accounts.",
      "description": "Data Definition Language (DDL) commands include CREATE, ALTER, and DROP object actions. These actions cause changes to the structure, definition and configuration of the DBMS as well as to the objects themselves that can affect any or all operations of the database. Such privileged actions, when not restricted to authorized persons and activities, can lead to a compromise of data and DBMS availability.",
      "severity": "medium"
    },
    {
      "id": "V-2498",
      "title": "Permissions using the WITH GRANT OPTION should be granted only to DBA or application administrator accounts.",
      "description": "The WITH GRANT option assigned with privileges, allows the grantee of the privilege to re-grant the privilege to other accounts. Unauthorized or unmanaged assignment of privileges may result in a compromise of data confidentiality and database operation. Privilege assignment should be restricted to DBA, application object owner accounts and application administration accounts.",
      "severity": "medium"
    },
    {
      "id": "V-3727",
      "title": "Database applications should be restricted from using static DDL statements to modify the application schema.",
      "description": "Application users by definition and job function require only the permissions to manipulate data within database objects and execute procedures within the database. The statements used to define objects in the database are referred to as Data Definition Language (DDL) statements and include the CREATE, DROP, and ALTER object statements (DDL statements do not include CREATE USER, DROP USER, or ALTER USER actions). This requirement is included here as a production system would by definition not support changes to the data definitions. Where object creation is an indirect result of DBMS operation or dynamic object structures are required by the application function as is found in some object-oriented DBMS applications, this restriction does not apply. Re-use of static data structures to recreate temporary data objects are not exempted.",
      "severity": "low"
    },
    {
      "id": "V-3817",
      "title": "Database accounts should not specify account lock times less than the site-approved minimum.",
      "description": "Unauthorized access to database accounts may be thwarted by instituting a lock on the target account after the specified number of unsuccessful logins. If allowed to continue an attack unimpeded, the attempt could eventually become successful and compromise the database and data integrity.",
      "severity": "medium"
    },
    {
      "id": "V-3823",
      "title": "Custom and GOTS application source code stored in the database should be protected with encryption or encoding.",
      "description": "Source code may include information on data relationships, locations of sensitive data that are otherwise obscured, or other processing information that could aid a malicious user. Encoding or encryption of the custom source code objects within the database helps protect against this type of disclosure.",
      "severity": "low"
    },
    {
      "id": "V-5683",
      "title": "Application object owner accounts should be disabled when not performing installation or maintenance actions.",
      "description": "Object ownership provides all database object permissions to the owned object. Access to the application object owner accounts requires special protection to prevent unauthorized access and use of the object ownership privileges. In addition to the high privileges to application objects assigned to this account, it is also an account that, by definition, is not accessed interactively except for application installation and maintenance. This reduced access to the account means that unauthorized access to the account could go undetected. To help protect the account, it should be enabled only when access is required.",
      "severity": "medium"
    }
  ]
}